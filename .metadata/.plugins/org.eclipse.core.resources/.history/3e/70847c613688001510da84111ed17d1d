package com.nanumi.controller;

import java.util.UUID;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.nanumi.dto.UserDTO;
import com.nanumi.service.CommonService;

/**
 * 媛�엯 李얘린 - �꾩씠�� 鍮꾨�踰덊샇 �섏젙 �덊눜 濡쒓렇�� 濡쒓렇�꾩썐 愿�떖�곹뭹 - �깅줉, ��젣
 */
@Controller
public class CommonController {
	@Autowired
	private CommonService service;

	@RequestMapping("SignUp.do")
	public void signUp(@RequestParam("userid") String userid) {
		if (isDuplicateUserid(userid)) {
			// id 以묐났, 媛�엯 遺덇�
		}

	}

	private boolean isDuplicateUserid(String userid) {
		if (service.login(userid) != null) {
			return true;
		}

		return false;
	}

	/**
	 * 
	 * @return Success uuid Fail LOGIN_ERROR_01: �꾩씠���낅젰 ���� LOGIN_ERROR_02:
	 *         鍮꾨�踰덊샇 ��┝ LOGIN_ERROR_03: 議댁옱�섏� �딅뒗 �꾩씠��
	 */
	@RequestMapping("Login.do")
	public String login(@RequestParam("userid") String userid, @RequestParam("pwd") String pwd, HttpSession session) {
		if (userid == null) {
			return "LOGIN_ERROR_01";
		}

		UserDTO user = service.login(userid);
		try {
			if (user.getPwd().equals(pwd)) {
				String userUUID = generateUUID(user.getUserid()).toString(); // 濡쒓렇���깃났,
																				// uuid
																				// 諛쒓툒
				session.setAttribute("UUID_" + userid, userUUID); // session��uuid
																	// ��옣
				return userUUID; // User device��uuid �꾩넚
			} else {
				return "LOGIN_ERROR_02";
			}
		} catch (NullPointerException e) {
			return "LOGIN_ERROR_03";
		}
	}

	@RequestMapping("Logout.do")
	public void logout(@RequestParam("userid") String userid, HttpSession session) {
		session.removeAttribute("UUID_" + userid);
	}

	/**
	 * User ID濡�uuid �앹꽦
	 * 
	 * @param userid
	 * @return uuid
	 */
	private UUID generateUUID(String userid) {
		return UUID.fromString(userid);
	}
}
